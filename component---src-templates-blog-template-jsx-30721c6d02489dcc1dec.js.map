{"version":3,"file":"component---src-templates-blog-template-jsx-30721c6d02489dcc1dec.js","mappings":"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","sources":["webpack://gatsby-blog-template/./src/components/MainContainer/MainContainer.jsx","webpack://gatsby-blog-template/./src/components/Pagination/PaginationItem.jsx","webpack://gatsby-blog-template/./src/components/Pagination/Pagination.jsx","webpack://gatsby-blog-template/./src/components/Post/PostDate.jsx","webpack://gatsby-blog-template/./src/components/PostListing/Thumbnail.jsx","webpack://gatsby-blog-template/./src/components/PostListing/PostInfo.jsx","webpack://gatsby-blog-template/./src/components/PostListing/Article.jsx","webpack://gatsby-blog-template/./src/components/PostListing/PostListing.jsx","webpack://gatsby-blog-template/./src/components/Sidebar/WidgetContainer.jsx","webpack://gatsby-blog-template/./src/components/Sidebar/WidgetTitle.jsx","webpack://gatsby-blog-template/./src/components/Sidebar/WidgetCategory.jsx","webpack://gatsby-blog-template/./src/components/Tag/Tag.jsx","webpack://gatsby-blog-template/./src/components/Sidebar/WidgetTag.jsx","webpack://gatsby-blog-template/./src/components/Sidebar/WidgetLatestPosts.jsx","webpack://gatsby-blog-template/./src/components/Sidebar/WidgetLinks.jsx","webpack://gatsby-blog-template/./src/components/Sidebar/WidgetSearch.jsx","webpack://gatsby-blog-template/./src/components/Sidebar/Sidebar.jsx","webpack://gatsby-blog-template/./src/templates/blog-template.jsx"],"sourcesContent":["import React from \"react\";\nimport \"./MainContainer.scss\";\n\nconst MainContainer = ({ content, sidebar }) => (\n  <section className=\"main-container container\">\n    <div className=\"content-wrapper padding-top-half padding-bottom-2\">\n      {content}\n    </div>\n    <div className=\"sidebar-wrapper padding-top-half padding-bottom-2\">\n      {sidebar}\n    </div>\n  </section>\n);\n\nexport default MainContainer;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport AutoLink from \"../AutoLink/AutoLink\";\n\nconst PaginationItem = (props) => {\n  const { value, currentPage, pathPrefix, pathPrefixPagination } = props;\n  const isLeft = value === -1;\n  const isRight = value === -2;\n\n  let to = pathPrefix;\n\n  if (isLeft) {\n    to += `${pathPrefixPagination}/${currentPage - 3}`;\n  } else if (isRight) {\n    to += `${pathPrefixPagination}/${currentPage + 3}`;\n  } else if (value !== 1) {\n    to += `${pathPrefixPagination}/${value}`;\n  }\n\n  return (\n    <AutoLink\n      to={to}\n      className={`pagination-item ${currentPage === value ? \"active\" : \"\"}`}\n      activeClassName=\"active\"\n    >\n      {isLeft && (\n        <FontAwesomeIcon icon={[\"fas\", \"angle-double-left\"]} size=\"xs\" />\n      )}\n\n      {value > 0 && value}\n\n      {isRight && (\n        <FontAwesomeIcon icon={[\"fas\", \"angle-double-right\"]} size=\"xs\" />\n      )}\n    </AutoLink>\n  );\n};\n\nexport default PaginationItem;\n","import React from \"react\";\nimport PaginationItem from \"./PaginationItem\";\nimport \"./Pagination.scss\";\n\n// condition: totalPages >= 2\nconst MAX_PAGINATION_ITEMS = 7;\n\nconst PAGINATION_LEFT = -1;\nconst PAGINATION_RIGHT = -2;\n\n// For example: there is 9 pages\n// [1], 2,  3,  4,  5,  -2,  9\n//  1, [2], 3,  4,  5,  -2,  9\n//  1,  2, [3], 4,  5,  -2,  9\n//  1,  2,  3, [4], 5,  -2,  9\n//  1, -1,  4, [5], 6,  -2,  9\n//  1, -1,  5, [6], 7,  -2,  9\n//  1, -1,  5,  6, [7], -2,  9\n//  1, -1,  5,  6,  7,  [8], 9\n//  1, -1,  5,  6,  7,   8, [9]\n\nconst Pagination = (props) => {\n  const {\n    currentPage,\n    totalPages,\n    pathPrefix,\n    pathPrefixPagination,\n    extraClass,\n  } = props;\n\n  const respArr = [];\n  if (totalPages <= MAX_PAGINATION_ITEMS) {\n    for (let i = 1; i <= totalPages; i++) {\n      respArr.push(i);\n    }\n  } else if (currentPage <= 4) {\n    for (let i = 1; i <= MAX_PAGINATION_ITEMS - 2; i++) {\n      respArr.push(i);\n    }\n    respArr.push(PAGINATION_RIGHT, totalPages);\n  } else if (totalPages - currentPage < 4) {\n    respArr.push(1, PAGINATION_LEFT);\n    for (let i = totalPages - 4; i <= totalPages; i++) {\n      respArr.push(i);\n    }\n  } else {\n    respArr.push(\n      1,\n      PAGINATION_LEFT,\n      currentPage - 1,\n      currentPage,\n      currentPage + 1,\n      PAGINATION_RIGHT,\n      totalPages\n    );\n  }\n\n  return (\n    <>\n      {totalPages >= 2 && (\n        <div className={`pagination-container ${extraClass}`}>\n          {respArr.map((value, index) => (\n            <PaginationItem\n              key={`${pathPrefix}-${index}`}\n              value={value}\n              currentPage={currentPage}\n              pathPrefix={pathPrefix}\n              pathPrefixPagination={pathPrefixPagination}\n            />\n          ))}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport { formatDate } from \"../../utils/helpers\";\nimport config from \"../../../data/SiteConfig\";\n\nconst PostDate = ({ date, extraClass = \"\" }) => (\n  <div className={`text-description ${extraClass}`}>\n    {config.postOnDate} {formatDate(date)}\n  </div>\n);\n\nexport default PostDate;\n","import React from \"react\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport AutoLink from \"../AutoLink/AutoLink\";\n\nconst Thumbnail = ({ post, extraClass = \"\" }) => {\n  const thumbnail = post.cover ? (\n    <AutoLink\n      to={post.slug}\n      key={post.title}\n      className={`thumbnail-wrapper line-height-reset ${extraClass}`}\n    >\n      <GatsbyImage image={getImage(post.cover)} className=\"thumbnail-img\" alt=\"\" />\n    </AutoLink>\n  ) : null;\n\n  return thumbnail;\n};\n\nexport default Thumbnail;\n","import React from \"react\";\nimport AutoLink from \"../AutoLink/AutoLink\";\nimport PostDate from \"../Post/PostDate\";\n\nconst PostInfo = ({ post, extraClass = \"\" }) => (\n  <div className={`post-info-wrapper ${extraClass}`}>\n    <AutoLink to={post.slug} key={post.title}>\n      <h2>\n        <small>{post.title}</small>\n      </h2>\n    </AutoLink>\n    <div className=\"margin-bottom-half\">{post.excerpt}</div>\n    <small>\n      <PostDate date={post.date} />\n    </small>\n  </div>\n);\n\nexport default PostInfo;\n","import React from \"react\";\nimport Thumbnail from \"./Thumbnail\";\nimport PostInfo from \"./PostInfo\";\nimport \"./Article.scss\";\n\nconst Article = ({ post, hasThumbnail }) => (\n  <article\n    key={post.title}\n    className=\"article-container padding-bottom-2 padding-top-2 border-bottom border-color-light-grey\"\n  >\n    {hasThumbnail && <Thumbnail post={post} />}\n    <PostInfo post={post} />\n  </article>\n);\n\nexport default Article;\n","import React, { Component } from \"react\";\nimport Article from \"./Article\";\n\nclass PostListing extends Component {\n  state = {\n    maxPosts:\n      (this.props.hasLoadmore || this.props.forcePostsPerPage) &&\n      this.props.postsPerPage\n        ? this.props.postsPerPage\n        : this.props.postList.length,\n  };\n\n  handleLoadmore = () => {\n    const { hasLoadmore = false, numberLoadmore } = this.props;\n\n    if (!hasLoadmore) return;\n\n    this.setState((prevState) => ({\n      maxPosts: prevState.maxPosts + numberLoadmore,\n    }));\n  };\n\n  render() {\n    const { postList, hasThumbnail = true, hasLoadmore = false } = this.props;\n    const { maxPosts } = this.state;\n\n    return (\n      <>\n        <div className=\"post-listing-container\">\n          {postList.map((post, index) => {\n            if (index < maxPosts)\n              return (\n                <Article\n                  key={post.title}\n                  post={post}\n                  hasThumbnail={hasThumbnail}\n                />\n              );\n\n            return null;\n          })}\n        </div>\n        {hasLoadmore && maxPosts < postList.length && (\n          <div className=\"loadmore-wrapper margin-top padding-top-half text-center\">\n            <button className=\"btn-primary\" onClick={this.handleLoadmore}>\n              {this.props.btnLoadmore}\n            </button>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default PostListing;\n","import React from \"react\";\n\nconst WidgetContainer = ({ extraClass = \"\", children }) => (\n  <aside className={`${extraClass} padding-top padding-bottom`}>\n    {children}\n  </aside>\n);\n\nexport default WidgetContainer;\n","import React from \"react\";\n\nconst WidgetTitle = ({ title }) => (\n  <h3 className=\"text-uppercase\">\n    <small>{title}</small>\n  </h3>\n);\n\nexport default WidgetTitle;\n","import React from \"react\";\nimport AutoLink from \"../AutoLink/AutoLink\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport { getCategoryPath } from \"../../utils/helpers\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetCategory = ({ categoryList }) => (\n  <WidgetContainer extraClass=\"categories-container\">\n    <WidgetTitle title={config.categoryWidgetTitle} />\n    <div>\n      {categoryList.map((category) => (\n        <AutoLink\n          key={category}\n          to={getCategoryPath(category)}\n          className=\"block border-bottom border-color-light-grey padding-top-half padding-bottom-half\"\n        >\n          <span>{category}</span>\n        </AutoLink>\n      ))}\n    </div>\n  </WidgetContainer>\n);\n\nexport default WidgetCategory;\n","import React from \"react\";\nimport AutoLink from \"../AutoLink/AutoLink\";\nimport { getTagPath } from \"../../utils/helpers\";\n\nconst Tag = ({ content }) => (\n  <AutoLink\n    key={content}\n    to={getTagPath(content)}\n    className=\"inline-block margin-right-half margin-bottom-half \n      border border-color-light-grey padding-left-half padding-right-half\"\n  >\n    <span>{content}</span>\n  </AutoLink>\n);\n\nexport default Tag;\n","import React from \"react\";\nimport Tag from \"../Tag/Tag\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetTag = ({ tagList }) => (\n  <WidgetContainer extraClass=\"categories-container\">\n    <WidgetTitle title={config.tagWidgetTitle} />\n    <div>\n      {tagList.map((tag) => (\n        <Tag key={tag} content={tag} />\n      ))}\n    </div>\n  </WidgetContainer>\n);\n\nexport default WidgetTag;\n","import React from \"react\";\nimport AutoLink from \"../AutoLink/AutoLink\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport { getPostList } from \"../../utils/helpers\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetLatesPosts = ({ latestPostEdges }) => {\n  const postList = getPostList(latestPostEdges);\n\n  return (\n    <WidgetContainer extraClass=\"latest-posts-container\">\n      <WidgetTitle title={config.latestPostsWidgetTitle} />\n      <div>\n        {postList.map((post) => (\n          <AutoLink\n            key={post.title}\n            to={post.slug}\n            className=\"block border-bottom border-color-light-grey padding-top-half padding-bottom-half\"\n          >\n            <span>{post.title}</span>\n          </AutoLink>\n        ))}\n      </div>\n    </WidgetContainer>\n  );\n};\n\nexport default WidgetLatesPosts;\n","import React from \"react\";\nimport AutoLink from \"../AutoLink/AutoLink\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetLinks = ({ links }) => (\n  <>\n    {links && links.length > 0 && (\n      <WidgetContainer extraClass=\"categories-container\">\n        <WidgetTitle title={config.linksWidgetTitle} />\n        <div>\n          {links.map((link) => (\n            <AutoLink\n              key={link.label}\n              to={link.url}\n              className=\"block border-bottom border-color-light-grey padding-top-half padding-bottom-half\"\n            >\n              <span>{link.label}</span>\n            </AutoLink>\n          ))}\n        </div>\n      </WidgetContainer>\n    )}\n  </>\n);\n\nexport default WidgetLinks;\n","import React, { Component } from \"react\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport config from \"../../../data/SiteConfig\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass WidgetSearch extends Component {\n  render() {\n    return (\n      <>\n        {config.hasSearch && (\n          <WidgetContainer extraClass=\"search-container\">\n            <WidgetTitle title={config.searchWidgetTitle} />\n            <form className=\"margin-bottom-none\" action=\"/search/\" method=\"get\">\n              <div className=\"container-full row padding-none margin-bottom-none\">\n                <div className=\"padding-none padding-right-half col-xs-10\">\n                  <input\n                    className=\"margin-bottom-none\"\n                    type=\"text\"\n                    name=\"q\"\n                    placeholder={config.searchWidgetPlaceHolder}\n                    required\n                    spellCheck=\"false\"\n                  />\n                </div>\n                <div className=\"padding-none padding-left-half col-xs-2\">\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    <FontAwesomeIcon\n                      icon={[\"fas\", \"search\"]}\n                      style={{ color: \"#FFFFFF\" }}\n                    />\n                  </button>\n                </div>\n              </div>\n            </form>\n          </WidgetContainer>\n        )}\n      </>\n    );\n  }\n}\n\nexport default WidgetSearch;\n","import React from \"react\";\nimport WidgetCategory from \"./WidgetCategory\";\nimport WidgetTag from \"./WidgetTag\";\nimport WidgetLatestPosts from \"./WidgetLatestPosts\";\nimport WidgetLinks from \"./WidgetLinks\";\nimport WidgetSearch from \"./WidgetSearch\";\nimport config from \"../../../data/SiteConfig\";\n\nconst Sidebar = ({ tagList, categoryList, latestPostEdges, links }) => {\n  return (\n    <aside\n      className={`sidebar-container width-full ${\n        config.sidebarSticky ? \"height-full\" : \"\"\n      }`}\n    >\n      <WidgetSearch />\n\n      {latestPostEdges && (\n        <WidgetLatestPosts latestPostEdges={latestPostEdges} />\n      )}\n\n      {categoryList && <WidgetCategory categoryList={categoryList} />}\n\n      {tagList && <WidgetTag tagList={tagList} />}\n\n      {links && (\n        <div className=\"position-sticky top-zero\">\n          <WidgetLinks links={links} />\n        </div>\n      )}\n    </aside>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport MainContainer from \"../components/MainContainer/MainContainer\";\nimport Sidebar from \"../components/Sidebar/Sidebar\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport Pagination from \"../components/Pagination/Pagination\";\nimport { getPostList } from \"../utils/helpers\";\nimport config from \"../../data/SiteConfig\";\n\nconst BlogTemplate = ({ data, pageContext }) => {\n  const { categoryList, tagList, latestPostEdges, currentPage, totalPages } =\n    pageContext;\n  const postEdges = data.allMarkdownRemark.edges;\n  const postList = getPostList(postEdges);\n  const content = (\n    <>\n      <PostListing\n        postList={postList}\n        hasThumbnail={config.blogHasThumbnail}\n        hasLoadmore={false}\n      />\n      <Pagination\n        extraClass=\"margin-top padding-top-half\"\n        currentPage={currentPage}\n        totalPages={totalPages}\n        pathPrefix={config.pathPrefixBlog}\n        pathPrefixPagination={config.pathPrefixPagination}\n      />\n    </>\n  );\n  const sidebar = (\n    <Sidebar\n      tagList={tagList}\n      categoryList={categoryList}\n      latestPostEdges={latestPostEdges}\n      links={config.sidebarLinks}\n    />\n  );\n\n  return (\n    <Layout>\n      <div className=\"blog-container\">\n        <Helmet title={`${config.blogHeader} - ${config.siteTitle}`} />\n        <MainContainer content={content} sidebar={sidebar} />\n      </div>\n    </Layout>\n  );\n};\n\nexport default BlogTemplate;\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query BlogPage($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      limit: $limit\n      skip: $skip\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { template: { eq: \"post\" } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            categories\n            cover {\n              childImageSharp {\n                gatsbyImageData(width: 660, quality: 100, layout: CONSTRAINED)\n              }\n            }\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["_ref","content","sidebar","React","className","props","value","currentPage","pathPrefix","pathPrefixPagination","isLeft","isRight","to","AutoLink","activeClassName","FontAwesomeIcon","icon","size","totalPages","extraClass","respArr","i","push","MAX_PAGINATION_ITEMS","map","index","PaginationItem","key","date","_ref$extraClass","config","formatDate","post","cover","slug","title","GatsbyImage","image","getImage","alt","excerpt","PostDate","hasThumbnail","Thumbnail","PostInfo","PostListing","_Component","_this","_len","arguments","length","args","Array","_key","call","apply","concat","state","maxPosts","hasLoadmore","forcePostsPerPage","postsPerPage","postList","handleLoadmore","_this$props","_this$props$hasLoadmo","numberLoadmore","setState","prevState","_inheritsLoose","prototype","render","_this$props2","this","_this$props2$hasThumb","_this$props2$hasLoadm","Article","onClick","btnLoadmore","Component","children","categoryList","WidgetContainer","WidgetTitle","category","getCategoryPath","getTagPath","tagList","tag","Tag","latestPostEdges","getPostList","links","link","label","url","WidgetSearch","action","method","type","name","placeholder","required","spellCheck","style","color","WidgetLatestPosts","WidgetCategory","WidgetTag","WidgetLinks","data","pageContext","postEdges","allMarkdownRemark","edges","Pagination","Sidebar","Layout","Helmet","MainContainer"],"sourceRoot":""}