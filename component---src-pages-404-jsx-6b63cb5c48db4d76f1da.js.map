{"version":3,"file":"component---src-pages-404-jsx-6b63cb5c48db4d76f1da.js","mappings":"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","sources":["webpack://gatsby-blog-template/./node_modules/url-join/lib/url-join.js","webpack://gatsby-blog-template/./src/components/Header/Header.jsx","webpack://gatsby-blog-template/./src/components/SEO/SEO.jsx","webpack://gatsby-blog-template/./src/pages/404.jsx"],"sourcesContent":["(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();else if (typeof define === 'function' && define.amd) define(definition);else context[name] = definition();\n})('urljoin', this, function () {\n  function normalize(strArray) {\n    var resultArray = [];\n    if (strArray.length === 0) {\n      return '';\n    }\n    if (typeof strArray[0] !== 'string') {\n      throw new TypeError('Url must be a string. Received ' + strArray[0]);\n    }\n\n    // If the first part is a plain protocol, we combine it with the next part.\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    }\n\n    // There must be two or three slashes in the file protocol, two slashes in anything else.\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n      if (component === '') {\n        continue;\n      }\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n      resultArray.push(component);\n    }\n    var str = resultArray.join('/');\n    // Each input component is now separated by a single slash except the possible first plain protocol part.\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?' : '') + parts.join('&');\n    return str;\n  }\n  return function () {\n    var input;\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n    return normalize(input);\n  };\n});","import React from \"react\";\n\nconst Header = ({ title }) => (\n  <header className=\"border-bottom border-color-light-grey\">\n    <div className=\"container\">\n      <h1 className=\"margin-none padding-top-2 padding-bottom-2\">{title}</h1>\n    </div>\n  </header>\n);\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { getSrc } from \"gatsby-plugin-image\";\nimport Helmet from \"react-helmet\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\nimport { useSlash } from \"../../utils/helpers\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let keywords;\n    let image = \"\";\n    let postURL;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      ({ title } = postMeta);\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n\n      keywords = postMeta.keywords;\n\n      if (postMeta.cover) {\n        image = getSrc(postMeta.cover);\n      }\n\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n      },\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push(\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image,\n              },\n            },\n          ],\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image,\n          },\n          description,\n        }\n      );\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n        {keywords && <meta name=\"keywords\" content={keywords} />}\n        <link rel=\"canonical\" href={useSlash(postURL || config.siteUrl)} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport Layout from \"../layout\";\nimport Header from \"../components/Header/Header\";\nimport SEO from \"../components/SEO/SEO\";\nimport AutoLink from \"../components/AutoLink/AutoLink\";\nimport config from \"../../data/SiteConfig\";\n\nconst PageNotFound = () => (\n  <Layout hasFooter={false}>\n    <div className=\"page-not-found-container\">\n      <Helmet title={`${config.pageNotFoundTitle} - ${config.siteTitle}`} />\n      <SEO />\n      <Header title={`${config.pageNotFoundTitle}`} />\n      <div className=\"main-content container padding-top-3 padding-bottom-3 margin-top-3 margin-bottom-3\">\n        <p>{config.pageNotFoundContent}</p>\n        <AutoLink to=\"/\" className=\"btn btn-primary\">\n          {config.pageNotFoundBtn}\n        </AutoLink>\n      </div>\n    </div>\n  </Layout>\n);\n\nexport default PageNotFound;\n"],"names":["strArray","resultArray","length","TypeError","match","first","shift","replace","i","component","push","str","join","parts","split","normalize","arguments","slice","call","module","exports","definition","_ref","title","React","className","SEO","_Component","apply","_inheritsLoose","prototype","render","description","keywords","postURL","_this$props","this","props","postNode","postPath","postSEO","image","postMeta","frontmatter","excerpt","cover","getSrc","urljoin","config","blogURL","schemaOrgJSONLD","url","name","alternateName","itemListElement","position","item","headline","Helmet","content","rel","href","useSlash","type","JSON","stringify","property","Component","Layout","hasFooter","Header","AutoLink","to"],"sourceRoot":""}