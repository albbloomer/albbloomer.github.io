{"version":3,"file":"component---src-pages-index-jsx-d88c106e7e5474455f08.js","mappings":"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","sources":["webpack://gatsby-blog-template/./node_modules/url-join/lib/url-join.js","webpack://gatsby-blog-template/./src/components/Header/Header.jsx","webpack://gatsby-blog-template/./src/components/MainContainer/MainContainer.jsx","webpack://gatsby-blog-template/./src/components/Post/PostDate.jsx","webpack://gatsby-blog-template/./src/components/PostListing/Thumbnail.jsx","webpack://gatsby-blog-template/./src/components/PostListing/PostInfo.jsx","webpack://gatsby-blog-template/./src/components/PostListing/Article.jsx","webpack://gatsby-blog-template/./src/components/PostListing/PostListing.jsx","webpack://gatsby-blog-template/./src/components/SEO/SEO.jsx","webpack://gatsby-blog-template/./src/components/Sidebar/WidgetContainer.jsx","webpack://gatsby-blog-template/./src/components/Sidebar/WidgetTitle.jsx","webpack://gatsby-blog-template/./src/components/Sidebar/WidgetCategory.jsx","webpack://gatsby-blog-template/./src/components/Tag/Tag.jsx","webpack://gatsby-blog-template/./src/components/Sidebar/WidgetTag.jsx","webpack://gatsby-blog-template/./src/components/Sidebar/WidgetLatestPosts.jsx","webpack://gatsby-blog-template/./src/components/Sidebar/WidgetLinks.jsx","webpack://gatsby-blog-template/./src/components/Sidebar/WidgetSearch.jsx","webpack://gatsby-blog-template/./src/components/Sidebar/Sidebar.jsx","webpack://gatsby-blog-template/./src/pages/index.jsx"],"sourcesContent":["(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();else if (typeof define === 'function' && define.amd) define(definition);else context[name] = definition();\n})('urljoin', this, function () {\n  function normalize(strArray) {\n    var resultArray = [];\n    if (strArray.length === 0) {\n      return '';\n    }\n    if (typeof strArray[0] !== 'string') {\n      throw new TypeError('Url must be a string. Received ' + strArray[0]);\n    }\n\n    // If the first part is a plain protocol, we combine it with the next part.\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    }\n\n    // There must be two or three slashes in the file protocol, two slashes in anything else.\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n      if (component === '') {\n        continue;\n      }\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n      resultArray.push(component);\n    }\n    var str = resultArray.join('/');\n    // Each input component is now separated by a single slash except the possible first plain protocol part.\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?' : '') + parts.join('&');\n    return str;\n  }\n  return function () {\n    var input;\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n    return normalize(input);\n  };\n});","import React from \"react\";\n\nconst Header = ({ title }) => (\n  <header className=\"border-bottom border-color-light-grey\">\n    <div className=\"container\">\n      <h1 className=\"margin-none padding-top-2 padding-bottom-2\">{title}</h1>\n    </div>\n  </header>\n);\n\nexport default Header;\n","import React from \"react\";\nimport \"./MainContainer.scss\";\n\nconst MainContainer = ({ content, sidebar }) => (\n  <section className=\"main-container container\">\n    <div className=\"content-wrapper padding-top-half padding-bottom-2\">\n      {content}\n    </div>\n    <div className=\"sidebar-wrapper padding-top-half padding-bottom-2\">\n      {sidebar}\n    </div>\n  </section>\n);\n\nexport default MainContainer;\n","import React from \"react\";\nimport { formatDate } from \"../../utils/helpers\";\nimport config from \"../../../data/SiteConfig\";\n\nconst PostDate = ({ date, extraClass = \"\" }) => (\n  <div className={`text-description ${extraClass}`}>\n    {config.postOnDate} {formatDate(date)}\n  </div>\n);\n\nexport default PostDate;\n","import React from \"react\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport AutoLink from \"../AutoLink/AutoLink\";\n\nconst Thumbnail = ({ post, extraClass = \"\" }) => {\n  const thumbnail = post.cover ? (\n    <AutoLink\n      to={post.slug}\n      key={post.title}\n      className={`thumbnail-wrapper line-height-reset ${extraClass}`}\n    >\n      <GatsbyImage image={getImage(post.cover)} className=\"thumbnail-img\" alt=\"\" />\n    </AutoLink>\n  ) : null;\n\n  return thumbnail;\n};\n\nexport default Thumbnail;\n","import React from \"react\";\nimport AutoLink from \"../AutoLink/AutoLink\";\nimport PostDate from \"../Post/PostDate\";\n\nconst PostInfo = ({ post, extraClass = \"\" }) => (\n  <div className={`post-info-wrapper ${extraClass}`}>\n    <AutoLink to={post.slug} key={post.title}>\n      <h2>\n        <small>{post.title}</small>\n      </h2>\n    </AutoLink>\n    <div className=\"margin-bottom-half\">{post.excerpt}</div>\n    <small>\n      <PostDate date={post.date} />\n    </small>\n  </div>\n);\n\nexport default PostInfo;\n","import React from \"react\";\nimport Thumbnail from \"./Thumbnail\";\nimport PostInfo from \"./PostInfo\";\nimport \"./Article.scss\";\n\nconst Article = ({ post, hasThumbnail }) => (\n  <article\n    key={post.title}\n    className=\"article-container padding-bottom-2 padding-top-2 border-bottom border-color-light-grey\"\n  >\n    {hasThumbnail && <Thumbnail post={post} />}\n    <PostInfo post={post} />\n  </article>\n);\n\nexport default Article;\n","import React, { Component } from \"react\";\nimport Article from \"./Article\";\n\nclass PostListing extends Component {\n  state = {\n    maxPosts:\n      (this.props.hasLoadmore || this.props.forcePostsPerPage) &&\n      this.props.postsPerPage\n        ? this.props.postsPerPage\n        : this.props.postList.length,\n  };\n\n  handleLoadmore = () => {\n    const { hasLoadmore = false, numberLoadmore } = this.props;\n\n    if (!hasLoadmore) return;\n\n    this.setState((prevState) => ({\n      maxPosts: prevState.maxPosts + numberLoadmore,\n    }));\n  };\n\n  render() {\n    const { postList, hasThumbnail = true, hasLoadmore = false } = this.props;\n    const { maxPosts } = this.state;\n\n    return (\n      <>\n        <div className=\"post-listing-container\">\n          {postList.map((post, index) => {\n            if (index < maxPosts)\n              return (\n                <Article\n                  key={post.title}\n                  post={post}\n                  hasThumbnail={hasThumbnail}\n                />\n              );\n\n            return null;\n          })}\n        </div>\n        {hasLoadmore && maxPosts < postList.length && (\n          <div className=\"loadmore-wrapper margin-top padding-top-half text-center\">\n            <button className=\"btn-primary\" onClick={this.handleLoadmore}>\n              {this.props.btnLoadmore}\n            </button>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default PostListing;\n","import React, { Component } from \"react\";\nimport { getSrc } from \"gatsby-plugin-image\";\nimport Helmet from \"react-helmet\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\nimport { useSlash } from \"../../utils/helpers\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let keywords;\n    let image = \"\";\n    let postURL;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      ({ title } = postMeta);\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n\n      keywords = postMeta.keywords;\n\n      if (postMeta.cover) {\n        image = getSrc(postMeta.cover);\n      }\n\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n      },\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push(\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image,\n              },\n            },\n          ],\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image,\n          },\n          description,\n        }\n      );\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n        {keywords && <meta name=\"keywords\" content={keywords} />}\n        <link rel=\"canonical\" href={useSlash(postURL || config.siteUrl)} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n","import React from \"react\";\n\nconst WidgetContainer = ({ extraClass = \"\", children }) => (\n  <aside className={`${extraClass} padding-top padding-bottom`}>\n    {children}\n  </aside>\n);\n\nexport default WidgetContainer;\n","import React from \"react\";\n\nconst WidgetTitle = ({ title }) => (\n  <h3 className=\"text-uppercase\">\n    <small>{title}</small>\n  </h3>\n);\n\nexport default WidgetTitle;\n","import React from \"react\";\nimport AutoLink from \"../AutoLink/AutoLink\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport { getCategoryPath } from \"../../utils/helpers\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetCategory = ({ categoryList }) => (\n  <WidgetContainer extraClass=\"categories-container\">\n    <WidgetTitle title={config.categoryWidgetTitle} />\n    <div>\n      {categoryList.map((category) => (\n        <AutoLink\n          key={category}\n          to={getCategoryPath(category)}\n          className=\"block border-bottom border-color-light-grey padding-top-half padding-bottom-half\"\n        >\n          <span>{category}</span>\n        </AutoLink>\n      ))}\n    </div>\n  </WidgetContainer>\n);\n\nexport default WidgetCategory;\n","import React from \"react\";\nimport AutoLink from \"../AutoLink/AutoLink\";\nimport { getTagPath } from \"../../utils/helpers\";\n\nconst Tag = ({ content }) => (\n  <AutoLink\n    key={content}\n    to={getTagPath(content)}\n    className=\"inline-block margin-right-half margin-bottom-half \n      border border-color-light-grey padding-left-half padding-right-half\"\n  >\n    <span>{content}</span>\n  </AutoLink>\n);\n\nexport default Tag;\n","import React from \"react\";\nimport Tag from \"../Tag/Tag\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetTag = ({ tagList }) => (\n  <WidgetContainer extraClass=\"categories-container\">\n    <WidgetTitle title={config.tagWidgetTitle} />\n    <div>\n      {tagList.map((tag) => (\n        <Tag key={tag} content={tag} />\n      ))}\n    </div>\n  </WidgetContainer>\n);\n\nexport default WidgetTag;\n","import React from \"react\";\nimport AutoLink from \"../AutoLink/AutoLink\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport { getPostList } from \"../../utils/helpers\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetLatesPosts = ({ latestPostEdges }) => {\n  const postList = getPostList(latestPostEdges);\n\n  return (\n    <WidgetContainer extraClass=\"latest-posts-container\">\n      <WidgetTitle title={config.latestPostsWidgetTitle} />\n      <div>\n        {postList.map((post) => (\n          <AutoLink\n            key={post.title}\n            to={post.slug}\n            className=\"block border-bottom border-color-light-grey padding-top-half padding-bottom-half\"\n          >\n            <span>{post.title}</span>\n          </AutoLink>\n        ))}\n      </div>\n    </WidgetContainer>\n  );\n};\n\nexport default WidgetLatesPosts;\n","import React from \"react\";\nimport AutoLink from \"../AutoLink/AutoLink\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetLinks = ({ links }) => (\n  <>\n    {links && links.length > 0 && (\n      <WidgetContainer extraClass=\"categories-container\">\n        <WidgetTitle title={config.linksWidgetTitle} />\n        <div>\n          {links.map((link) => (\n            <AutoLink\n              key={link.label}\n              to={link.url}\n              className=\"block border-bottom border-color-light-grey padding-top-half padding-bottom-half\"\n            >\n              <span>{link.label}</span>\n            </AutoLink>\n          ))}\n        </div>\n      </WidgetContainer>\n    )}\n  </>\n);\n\nexport default WidgetLinks;\n","import React, { Component } from \"react\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport config from \"../../../data/SiteConfig\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass WidgetSearch extends Component {\n  render() {\n    return (\n      <>\n        {config.hasSearch && (\n          <WidgetContainer extraClass=\"search-container\">\n            <WidgetTitle title={config.searchWidgetTitle} />\n            <form className=\"margin-bottom-none\" action=\"/search/\" method=\"get\">\n              <div className=\"container-full row padding-none margin-bottom-none\">\n                <div className=\"padding-none padding-right-half col-xs-10\">\n                  <input\n                    className=\"margin-bottom-none\"\n                    type=\"text\"\n                    name=\"q\"\n                    placeholder={config.searchWidgetPlaceHolder}\n                    required\n                    spellCheck=\"false\"\n                  />\n                </div>\n                <div className=\"padding-none padding-left-half col-xs-2\">\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    <FontAwesomeIcon\n                      icon={[\"fas\", \"search\"]}\n                      style={{ color: \"#FFFFFF\" }}\n                    />\n                  </button>\n                </div>\n              </div>\n            </form>\n          </WidgetContainer>\n        )}\n      </>\n    );\n  }\n}\n\nexport default WidgetSearch;\n","import React from \"react\";\nimport WidgetCategory from \"./WidgetCategory\";\nimport WidgetTag from \"./WidgetTag\";\nimport WidgetLatestPosts from \"./WidgetLatestPosts\";\nimport WidgetLinks from \"./WidgetLinks\";\nimport WidgetSearch from \"./WidgetSearch\";\nimport config from \"../../../data/SiteConfig\";\n\nconst Sidebar = ({ tagList, categoryList, latestPostEdges, links }) => {\n  return (\n    <aside\n      className={`sidebar-container width-full ${\n        config.sidebarSticky ? \"height-full\" : \"\"\n      }`}\n    >\n      <WidgetSearch />\n\n      {latestPostEdges && (\n        <WidgetLatestPosts latestPostEdges={latestPostEdges} />\n      )}\n\n      {categoryList && <WidgetCategory categoryList={categoryList} />}\n\n      {tagList && <WidgetTag tagList={tagList} />}\n\n      {links && (\n        <div className=\"position-sticky top-zero\">\n          <WidgetLinks links={links} />\n        </div>\n      )}\n    </aside>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport Header from \"../components/Header/Header\";\nimport MainContainer from \"../components/MainContainer/MainContainer\";\nimport Sidebar from \"../components/Sidebar/Sidebar\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport AutoLink from \"../components/AutoLink/AutoLink\";\nimport SEO from \"../components/SEO/SEO\";\nimport { getPostList, getTagCategoryList } from \"../utils/helpers\";\nimport config from \"../../data/SiteConfig\";\n\nclass Index extends React.Component {\n  render() {\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n    const postList = getPostList(postEdges);\n    const { tagList, categoryList } = getTagCategoryList(postList);\n\n    const content = (\n      <>\n        <PostListing\n          postList={postList}\n          hasThumbnail={config.homeHasThumbnail}\n          hasLoadmore={config.homeHasLoadmore}\n          postsPerPage={config.postsPerPage}\n          numberLoadmore={config.numberLoadmore}\n          btnLoadmore={config.btnLoadmore}\n          forcePostsPerPage={config.homeHasLoadmore == false}\n        />\n        {!config.homeHasLoadmore && postList.length > config.postsPerPage && (\n          <div className=\"more-articles-wrapper margin-top padding-top-half text-center\">\n            <AutoLink\n              className=\"btn btn-primary\"\n              to={`${config.pathPrefixBlog}${config.pathPrefixPagination}/2`}\n            >\n              {config.homeMoreArticles}\n            </AutoLink>\n          </div>\n        )}\n      </>\n    );\n\n    const sidebar = (\n      <Sidebar\n        tagList={tagList}\n        categoryList={categoryList}\n        links={config.sidebarLinks}\n      />\n    );\n\n    const headerTitle = config.homeHeader\n      ? `${config.siteTitle} - ${config.homeHeader}`\n      : `${config.siteTitle}`;\n\n    return (\n      <Layout>\n        <div className=\"index-container\">\n          <Helmet title={config.siteTitle} />\n          <SEO />\n          <Header title={headerTitle} />\n          <MainContainer content={content} sidebar={sidebar} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default Index;\n\n/* eslint no-undef: \"off\" */\nexport const indexQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { template: { eq: \"post\" } } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            categories\n            date\n            cover {\n              childImageSharp {\n                gatsbyImageData(width: 660, quality: 100, layout: CONSTRAINED)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["strArray","resultArray","length","TypeError","match","first","shift","replace","i","component","push","str","join","parts","split","normalize","arguments","slice","call","module","exports","definition","_ref","title","React","className","content","sidebar","date","_ref$extraClass","extraClass","config","formatDate","post","cover","AutoLink","to","slug","key","GatsbyImage","image","getImage","alt","excerpt","PostDate","hasThumbnail","Thumbnail","PostInfo","PostListing","_Component","_this","_len","args","Array","_key","apply","concat","state","maxPosts","props","hasLoadmore","forcePostsPerPage","postsPerPage","postList","handleLoadmore","_this$props","_this$props$hasLoadmo","numberLoadmore","setState","prevState","_inheritsLoose","prototype","render","_this$props2","this","_this$props2$hasThumb","_this$props2$hasLoadm","map","index","Article","onClick","btnLoadmore","Component","SEO","description","keywords","postURL","postNode","postPath","postSEO","postMeta","frontmatter","getSrc","urljoin","blogURL","schemaOrgJSONLD","url","name","alternateName","itemListElement","position","item","headline","Helmet","rel","href","useSlash","type","JSON","stringify","property","children","categoryList","WidgetContainer","WidgetTitle","category","getCategoryPath","getTagPath","tagList","tag","Tag","latestPostEdges","getPostList","links","link","label","WidgetSearch","action","method","placeholder","required","spellCheck","FontAwesomeIcon","icon","style","color","WidgetLatestPosts","WidgetCategory","WidgetTag","WidgetLinks","Index","_React$Component","postEdges","data","allMarkdownRemark","edges","_getTagCategoryList","getTagCategoryList","Sidebar","headerTitle","Layout","Header","MainContainer"],"sourceRoot":""}