{
    "componentChunkName": "component---src-templates-post-template-jsx",
    "path": "/databaselock20231020/",
    "result": {"data":{"markdownRemark":{"html":"<h2 id=\"시작\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EC%9E%91\" aria-label=\"시작 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시작</h2>\n<p>락.. 실무나 이론적인 공부를 하다보면 락에 대한 얘기는 끊임없이 나오는 것 같다. 그럴 때마다 ‘나중에 한번 제대로! 공부를 해야지’ 하고 다짐만 할 뿐, 다시 코딩을 시작한다.</p>\n<p>이제 좀 알아보자.</p>\n<h2 id=\"공부하기전-선수-개념\" style=\"position:relative;\"><a href=\"#%EA%B3%B5%EB%B6%80%ED%95%98%EA%B8%B0%EC%A0%84-%EC%84%A0%EC%88%98-%EA%B0%9C%EB%85%90\" aria-label=\"공부하기전 선수 개념 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>공부하기전 선수 개념</h2>\n<p><strong>트랜잭션</strong> : 데이터베이스에서 실행되는 하나의 논리적 작업 단위이다. 예를 들어, 은행 계좌 이체 작업은 하나의 트랜잭션이다.</p>\n<ul>\n<li>ACID</li>\n</ul>\n<p><strong>커밋</strong> : 트랜잭션의 모든 작업이 성공적으로 완료되었음을 데이터베이스에 알리는 과정이다. 커밋을 통해 변경 사항이 데이터베이스에 영구적으로 저장.</p>\n<ul>\n<li>트랜잭션을 ‘커밋’ 하여 변경사항을 데이터베이스에 반영한다.</li>\n</ul>\n<p><strong>세션</strong> : client ( application 서버 ) 하고 db 하고 연결되어 있는 전체적인 시간</p>\n<ul>\n<li>연결 풀을 사용하는 경우, 여러 I/O 작업이 같은 세션을 재사용</li>\n<li>연결 풀을 사용하지 않는 경우, 각 I/O 작업마다 새로운 세션을 생성</li>\n</ul>\n<h2 id=\"락-종류\" style=\"position:relative;\"><a href=\"#%EB%9D%BD-%EC%A2%85%EB%A5%98\" aria-label=\"락 종류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>락 종류</h2>\n<h2 id=\"락-시나리오\" style=\"position:relative;\"><a href=\"#%EB%9D%BD-%EC%8B%9C%EB%82%98%EB%A6%AC%EC%98%A4\" aria-label=\"락 시나리오 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>락 시나리오</h2>\n<h2 id=\"락-범위\" style=\"position:relative;\"><a href=\"#%EB%9D%BD-%EB%B2%94%EC%9C%84\" aria-label=\"락 범위 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>락 범위</h2>\n<h2 id=\"해결-방법\" style=\"position:relative;\"><a href=\"#%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\" aria-label=\"해결 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>해결 방법</h2>\n<ul>\n<li>각각의 트랜잭션이 빠르게 실행되도록 해야함</li>\n<li>그래야 그 데이터간의 락 Race Condition 이 생기지 않음</li>\n<li>동시에 접근을 안하게 하는게 좋음</li>\n<li>대용량 → 작업 단위를 쪼개거나 Lock Time out 을 설정</li>\n</ul>\n<h2 id=\"끝내며\" style=\"position:relative;\"><a href=\"#%EB%81%9D%EB%82%B4%EB%A9%B0\" aria-label=\"끝내며 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>끝내며</h2>","timeToRead":1,"excerpt":"…","frontmatter":{"title":"Mysql Lock 에 대해서","date":"2023-12-30T11:31:00Z","categories":["db"],"tags":["mysql"],"description":"this is a description","keywords":"pig","cover":{"childImageSharp":{"gatsbyImageData":{"layout":"fixed","backgroundColor":"#283828","images":{"fallback":{"src":"/static/b4966d299f055d8e8acc60813745af76/95647/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202023-11-22%20%EC%98%A4%ED%9B%84%207.31.44.png","srcSet":"/static/b4966d299f055d8e8acc60813745af76/95647/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202023-11-22%20%EC%98%A4%ED%9B%84%207.31.44.png 660w","sizes":"660px"},"sources":[{"srcSet":"/static/b4966d299f055d8e8acc60813745af76/e4b95/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202023-11-22%20%EC%98%A4%ED%9B%84%207.31.44.webp 660w","type":"image/webp","sizes":"660px"}]},"width":660,"height":581}}}},"fields":{"slug":"/databaselock20231020/","date":"2023-12-30T11:31:00.000Z"}}},"pageContext":{"slug":"/databaselock20231020/","nexttitle":"데이터 파이프라인 kafka streams 적용하기","nextslug":"/kafkastreams20231202/","prevtitle":"GenerationType.AUTO Insert into table values Error -> GenerationType.IDENTITY","prevslug":"/generationtype20210404/","tagList":["mysql","kafka streams","kafka","infra","cache","docker","crawl","spring","java","theory","git","db"],"categoryList":["db","kafka","redis","docker","java","spring","theory"],"latestPostEdges":[{"node":{"fields":{"slug":"/databaselock20231020/"},"frontmatter":{"template":"post","title":"Mysql Lock 에 대해서","tags":["mysql"],"categories":["db"],"date":"2023-12-30T11:31:00Z"}}},{"node":{"fields":{"slug":"/kafkastreams20231202/"},"frontmatter":{"template":"post","title":"데이터 파이프라인 kafka streams 적용하기","tags":["kafka streams","kafka"],"categories":["kafka"],"date":"2023-12-02T08:31:00Z"}}},{"node":{"fields":{"slug":"/redisinfra20231124/"},"frontmatter":{"template":"post","title":"redis 구성 - 단일, 레플리케이션, 센티넬","tags":["infra","cache"],"categories":["redis"],"date":"2023-11-24T14:31:00Z"}}},{"node":{"fields":{"slug":"/docker20231113/"},"frontmatter":{"template":"post","title":"도커 overlay 용량을 정리해보자.","tags":["docker"],"categories":["docker"],"date":"2023-11-13T22:31:00Z"}}},{"node":{"fields":{"slug":"/crawl20231020/"},"frontmatter":{"template":"post","title":"chromWebdriver 크롤 버전 이슈","tags":["crawl"],"categories":["java"],"date":"2023-10-20T22:31:00Z"}}},{"node":{"fields":{"slug":"/cacheloop20230524/"},"frontmatter":{"template":"post","title":"[2] 서비스 캐싱 - 데이터 업데이트","tags":["spring","java","cache"],"categories":["spring"],"date":"2023-05-24T22:31:00Z"}}},{"node":{"fields":{"slug":"/cachelocalglobal20230523/"},"frontmatter":{"template":"post","title":"[1] 서비스 캐싱 - Local, Global","tags":["spring","java","cache"],"categories":["spring"],"date":"2023-05-23T22:31:00Z"}}},{"node":{"fields":{"slug":"/solid20220501/"},"frontmatter":{"template":"post","title":"객체 지향 설계 5원칙 - SOLID","tags":["theory"],"categories":["theory"],"date":"2022-05-01T22:31:00Z"}}}]}},
    "staticQueryHashes": []}