{
    "componentChunkName": "component---src-templates-post-template-jsx",
    "path": "/builderdefault20220103/",
    "result": {"data":{"markdownRemark":{"html":"<p>회사에서 금융 프로젝트를 하면서 Jenkins를 통해 빌드를 할 때 간헐적으로 에러가 발생했다. 즉슨, 어쩔때는 빌드가 성공하여 배포도 잘되었다는 것.</p>\n<p>찾아보니 @Builder 어노테이션을 썼을 때 필드를 초기화하면 에러가 날수도 있단다. <strong>@Builder will ignore the initializing expression entirely</strong> version 이 올라감에 따라 이제는 필수로 써야한다고는 하는데.. 이게 오락가락 한가보다.</p>\n<p>요즘 커뮤니케이션을 하면서 <strong>두괄식</strong>이 굉장히 중요하다고 느끼고 있다. 결론만 우선 말하면 된다. 부가적인 설명은 필요없다. 나는 우선 해결 방법을 먼저 말하고 공부한 내용을 뒤에 쓰려한다.</p>\n<blockquote>\n<p><strong>해결 방법</strong></p>\n</blockquote>\n<p><strong>1.</strong> fianl 키워드 붙이기\n<strong>2.</strong> @Builder.default 붙이기</p>\n<img src=\"https://images.velog.io/images/minyul/post/ce349f71-4025-4e9c-81e4-b8dc8ef73211/image.png\" width=\"100%\" alt=\"\">\n<img src=\"https://images.velog.io/images/minyul/post/5fd1fc2c-795c-48dd-b4b2-5741dd0467ed/image.png\" width=\"100%\" alt=\"\">\n<blockquote>\n<p><strong>부연 설명</strong></p>\n</blockquote>\n<p>때마침 나는 학교 동기들과 <strong>백기선님의 디자인패턴</strong>을 공부하고 있었고 빌더패턴을 공부했기 때문에 빌더패턴을 우선 구현해보고자 한다. 되게 간단한 구현이기에 간단히 실시간 코딩과 캡처로 구현을 끝내려한다. 그리고 이 구현 연습으로 @Builder 어노테이션을 쓸 때, 잔상이라도 이 구현이 머리에 남아있으면 된다.</p>\n<img src=\"https://images.velog.io/images/minyul/post/52137551-2ed3-4f7e-90c1-a8bab1c669b2/image.png\" width=\"100%\" alt=\"\">\n<img src=\"https://images.velog.io/images/minyul/post/3fec6c39-dc6a-41a9-ab19-98168589878b/image.png\" width=\"100%\" alt=\"\">\n<img src=\"https://images.velog.io/images/minyul/post/5b92db59-81dd-4b82-9693-605dd633cdf5/image.png\" width=\"100%\" alt=\"\">\n<img src=\"https://images.velog.io/images/minyul/post/817cb122-257c-4c07-8947-f11aa5b36391/image.png\" width=\"100%\" alt=\"\">\n<p><strong>Builder 를 사용하면 우리가 생각하는 방법으로는 초기화가 되지 않는다.</strong></p>\n<img src=\"https://images.velog.io/images/minyul/post/ef8bc43f-030c-42a8-95f1-bc530a54a6b2/image.png\" width=\"100%\" alt=\"\">\n<img src=\"https://images.velog.io/images/minyul/post/0fb07be4-1c94-41bf-9a50-8afb13257492/image.png\" width=\"100%\" alt=\"\">\n<blockquote>\n<p><strong>자, 그냥 내가 만약 builder build method에 초기화를 시켰다면 ? null 이 아닌 값이 잘 나올 것이다. 그럼 왜? 이유가 뭐지? Docs 를 보자. 기본적으로 0, null, false 가 나오게 구현이 되어있다. </strong></p>\n</blockquote>\n<img src=\"https://images.velog.io/images/minyul/post/81f5d9a7-93d2-4dc4-826e-0fa02cecd3be/image.png\" width=\"100%\" alt=\"\">","timeToRead":1,"excerpt":"회사에서 금융 프로젝트를 하면서 Jenkins를 통해 빌드를 할 때 간헐적으로 에러가 발생했다. 즉슨, 어쩔때는 빌드가 성공하여 배포도 잘되었다는 것. 찾아보니 @Builder…","frontmatter":{"title":"Builder Pattern - @Builder error : Final, @Builder.default (초기화, @Builder will ignore the initializing expression entirely) ","date":"2022-01-03T22:31:00Z","categories":["spring"],"tags":["spring","java"],"description":"this is a description","keywords":"pig","cover":{"childImageSharp":{"gatsbyImageData":{"layout":"fixed","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/7413362cc5f5f275eef36cbf008c450f/d134a/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202023-11-18%20%EC%98%A4%ED%9B%84%207.43.35.png","srcSet":"/static/7413362cc5f5f275eef36cbf008c450f/d134a/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202023-11-18%20%EC%98%A4%ED%9B%84%207.43.35.png 357w","sizes":"357px"},"sources":[{"srcSet":"/static/7413362cc5f5f275eef36cbf008c450f/d246f/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202023-11-18%20%EC%98%A4%ED%9B%84%207.43.35.webp 357w","type":"image/webp","sizes":"357px"}]},"width":660,"height":460}}}},"fields":{"slug":"/builderdefault20220103/","date":"2022-01-03T22:31:00.000Z"}}},"pageContext":{"slug":"/builderdefault20220103/","nexttitle":"Mysql Query Between 과 >=, <= 성능 차이 비교 ( 더미데이터 50만 )","nextslug":"/between20210729/","prevtitle":"GIT 에 대한 그림 이해","prevslug":"/gitbasic20220218/","tagList":["kafka streams","kafka","infra","cache","docker","crawl","spring","java","theory","git","mysql","db"],"categoryList":["kafka","redis","docker","java","spring","theory","db"],"latestPostEdges":[{"node":{"fields":{"slug":"/kafkastreams20231202/"},"frontmatter":{"template":"post","title":"데이터 파이프라인 kafka streams 적용하기","tags":["kafka streams","kafka"],"categories":["kafka"],"date":"2023-12-02T08:31:00Z"}}},{"node":{"fields":{"slug":"/redisinfra20231124/"},"frontmatter":{"template":"post","title":"redis 구성 - 단일, 레플리케이션, 센티넬","tags":["infra","cache"],"categories":["redis"],"date":"2023-11-24T14:31:00Z"}}},{"node":{"fields":{"slug":"/docker20231113/"},"frontmatter":{"template":"post","title":"도커 overlay 용량을 정리해보자.","tags":["docker"],"categories":["docker"],"date":"2023-11-13T22:31:00Z"}}},{"node":{"fields":{"slug":"/crawl20231020/"},"frontmatter":{"template":"post","title":"chromWebdriver 크롤 버전 이슈","tags":["crawl"],"categories":["java"],"date":"2023-10-20T22:31:00Z"}}},{"node":{"fields":{"slug":"/cacheloop20230524/"},"frontmatter":{"template":"post","title":"[2] 서비스 캐싱 - 데이터 업데이트","tags":["spring","java","cache"],"categories":["spring"],"date":"2023-05-24T22:31:00Z"}}},{"node":{"fields":{"slug":"/cachelocalglobal20230523/"},"frontmatter":{"template":"post","title":"[1] 서비스 캐싱 - Local, Global","tags":["spring","java","cache"],"categories":["spring"],"date":"2023-05-23T22:31:00Z"}}},{"node":{"fields":{"slug":"/solid20220501/"},"frontmatter":{"template":"post","title":"객체 지향 설계 5원칙 - SOLID","tags":["theory"],"categories":["theory"],"date":"2022-05-01T22:31:00Z"}}},{"node":{"fields":{"slug":"/jpa120220421/"},"frontmatter":{"template":"post","title":"JPA 영속성 관리","tags":["java","spring"],"categories":["spring"],"date":"2022-04-21T22:31:00Z"}}}]}},
    "staticQueryHashes": []}