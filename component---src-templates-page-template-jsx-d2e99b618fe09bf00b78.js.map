{"version":3,"file":"component---src-templates-page-template-jsx-d2e99b618fe09bf00b78.js","mappings":"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","sources":["webpack://gatsby-blog-template/./node_modules/url-join/lib/url-join.js","webpack://gatsby-blog-template/./src/components/Header/Header.jsx","webpack://gatsby-blog-template/./src/components/MainContainer/MainContainer.jsx","webpack://gatsby-blog-template/./src/components/SEO/SEO.jsx","webpack://gatsby-blog-template/./src/components/Sidebar/WidgetContainer.jsx","webpack://gatsby-blog-template/./src/components/Sidebar/WidgetTitle.jsx","webpack://gatsby-blog-template/./src/components/Sidebar/WidgetCategory.jsx","webpack://gatsby-blog-template/./src/components/Tag/Tag.jsx","webpack://gatsby-blog-template/./src/components/Sidebar/WidgetTag.jsx","webpack://gatsby-blog-template/./src/components/Sidebar/WidgetLatestPosts.jsx","webpack://gatsby-blog-template/./src/components/Sidebar/WidgetLinks.jsx","webpack://gatsby-blog-template/./src/components/Sidebar/WidgetSearch.jsx","webpack://gatsby-blog-template/./src/components/Sidebar/Sidebar.jsx","webpack://gatsby-blog-template/./src/components/Page/Page.jsx","webpack://gatsby-blog-template/./src/templates/page-template.jsx"],"sourcesContent":["(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();else if (typeof define === 'function' && define.amd) define(definition);else context[name] = definition();\n})('urljoin', this, function () {\n  function normalize(strArray) {\n    var resultArray = [];\n    if (strArray.length === 0) {\n      return '';\n    }\n    if (typeof strArray[0] !== 'string') {\n      throw new TypeError('Url must be a string. Received ' + strArray[0]);\n    }\n\n    // If the first part is a plain protocol, we combine it with the next part.\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    }\n\n    // There must be two or three slashes in the file protocol, two slashes in anything else.\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n      if (component === '') {\n        continue;\n      }\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n      resultArray.push(component);\n    }\n    var str = resultArray.join('/');\n    // Each input component is now separated by a single slash except the possible first plain protocol part.\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?' : '') + parts.join('&');\n    return str;\n  }\n  return function () {\n    var input;\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n    return normalize(input);\n  };\n});","import React from \"react\";\n\nconst Header = ({ title }) => (\n  <header className=\"border-bottom border-color-light-grey\">\n    <div className=\"container\">\n      <h1 className=\"margin-none padding-top-2 padding-bottom-2\">{title}</h1>\n    </div>\n  </header>\n);\n\nexport default Header;\n","import React from \"react\";\nimport \"./MainContainer.scss\";\n\nconst MainContainer = ({ content, sidebar }) => (\n  <section className=\"main-container container\">\n    <div className=\"content-wrapper padding-top-half padding-bottom-2\">\n      {content}\n    </div>\n    <div className=\"sidebar-wrapper padding-top-half padding-bottom-2\">\n      {sidebar}\n    </div>\n  </section>\n);\n\nexport default MainContainer;\n","import React, { Component } from \"react\";\nimport { getSrc } from \"gatsby-plugin-image\";\nimport Helmet from \"react-helmet\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\nimport { useSlash } from \"../../utils/helpers\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let keywords;\n    let image = \"\";\n    let postURL;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      ({ title } = postMeta);\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n\n      keywords = postMeta.keywords;\n\n      if (postMeta.cover) {\n        image = getSrc(postMeta.cover);\n      }\n\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n      },\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push(\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image,\n              },\n            },\n          ],\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image,\n          },\n          description,\n        }\n      );\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n        {keywords && <meta name=\"keywords\" content={keywords} />}\n        <link rel=\"canonical\" href={useSlash(postURL || config.siteUrl)} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n","import React from \"react\";\n\nconst WidgetContainer = ({ extraClass = \"\", children }) => (\n  <aside className={`${extraClass} padding-top padding-bottom`}>\n    {children}\n  </aside>\n);\n\nexport default WidgetContainer;\n","import React from \"react\";\n\nconst WidgetTitle = ({ title }) => (\n  <h3 className=\"text-uppercase\">\n    <small>{title}</small>\n  </h3>\n);\n\nexport default WidgetTitle;\n","import React from \"react\";\nimport AutoLink from \"../AutoLink/AutoLink\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport { getCategoryPath } from \"../../utils/helpers\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetCategory = ({ categoryList }) => (\n  <WidgetContainer extraClass=\"categories-container\">\n    <WidgetTitle title={config.categoryWidgetTitle} />\n    <div>\n      {categoryList.map((category) => (\n        <AutoLink\n          key={category}\n          to={getCategoryPath(category)}\n          className=\"block border-bottom border-color-light-grey padding-top-half padding-bottom-half\"\n        >\n          <span>{category}</span>\n        </AutoLink>\n      ))}\n    </div>\n  </WidgetContainer>\n);\n\nexport default WidgetCategory;\n","import React from \"react\";\nimport AutoLink from \"../AutoLink/AutoLink\";\nimport { getTagPath } from \"../../utils/helpers\";\n\nconst Tag = ({ content }) => (\n  <AutoLink\n    key={content}\n    to={getTagPath(content)}\n    className=\"inline-block margin-right-half margin-bottom-half \n      border border-color-light-grey padding-left-half padding-right-half\"\n  >\n    <span>{content}</span>\n  </AutoLink>\n);\n\nexport default Tag;\n","import React from \"react\";\nimport Tag from \"../Tag/Tag\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetTag = ({ tagList }) => (\n  <WidgetContainer extraClass=\"categories-container\">\n    <WidgetTitle title={config.tagWidgetTitle} />\n    <div>\n      {tagList.map((tag) => (\n        <Tag key={tag} content={tag} />\n      ))}\n    </div>\n  </WidgetContainer>\n);\n\nexport default WidgetTag;\n","import React from \"react\";\nimport AutoLink from \"../AutoLink/AutoLink\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport { getPostList } from \"../../utils/helpers\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetLatesPosts = ({ latestPostEdges }) => {\n  const postList = getPostList(latestPostEdges);\n\n  return (\n    <WidgetContainer extraClass=\"latest-posts-container\">\n      <WidgetTitle title={config.latestPostsWidgetTitle} />\n      <div>\n        {postList.map((post) => (\n          <AutoLink\n            key={post.title}\n            to={post.slug}\n            className=\"block border-bottom border-color-light-grey padding-top-half padding-bottom-half\"\n          >\n            <span>{post.title}</span>\n          </AutoLink>\n        ))}\n      </div>\n    </WidgetContainer>\n  );\n};\n\nexport default WidgetLatesPosts;\n","import React from \"react\";\nimport AutoLink from \"../AutoLink/AutoLink\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport config from \"../../../data/SiteConfig\";\n\nconst WidgetLinks = ({ links }) => (\n  <>\n    {links && links.length > 0 && (\n      <WidgetContainer extraClass=\"categories-container\">\n        <WidgetTitle title={config.linksWidgetTitle} />\n        <div>\n          {links.map((link) => (\n            <AutoLink\n              key={link.label}\n              to={link.url}\n              className=\"block border-bottom border-color-light-grey padding-top-half padding-bottom-half\"\n            >\n              <span>{link.label}</span>\n            </AutoLink>\n          ))}\n        </div>\n      </WidgetContainer>\n    )}\n  </>\n);\n\nexport default WidgetLinks;\n","import React, { Component } from \"react\";\nimport WidgetContainer from \"./WidgetContainer\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport config from \"../../../data/SiteConfig\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass WidgetSearch extends Component {\n  render() {\n    return (\n      <>\n        {config.hasSearch && (\n          <WidgetContainer extraClass=\"search-container\">\n            <WidgetTitle title={config.searchWidgetTitle} />\n            <form className=\"margin-bottom-none\" action=\"/search/\" method=\"get\">\n              <div className=\"container-full row padding-none margin-bottom-none\">\n                <div className=\"padding-none padding-right-half col-xs-10\">\n                  <input\n                    className=\"margin-bottom-none\"\n                    type=\"text\"\n                    name=\"q\"\n                    placeholder={config.searchWidgetPlaceHolder}\n                    required\n                    spellCheck=\"false\"\n                  />\n                </div>\n                <div className=\"padding-none padding-left-half col-xs-2\">\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    <FontAwesomeIcon\n                      icon={[\"fas\", \"search\"]}\n                      style={{ color: \"#FFFFFF\" }}\n                    />\n                  </button>\n                </div>\n              </div>\n            </form>\n          </WidgetContainer>\n        )}\n      </>\n    );\n  }\n}\n\nexport default WidgetSearch;\n","import React from \"react\";\nimport WidgetCategory from \"./WidgetCategory\";\nimport WidgetTag from \"./WidgetTag\";\nimport WidgetLatestPosts from \"./WidgetLatestPosts\";\nimport WidgetLinks from \"./WidgetLinks\";\nimport WidgetSearch from \"./WidgetSearch\";\nimport config from \"../../../data/SiteConfig\";\n\nconst Sidebar = ({ tagList, categoryList, latestPostEdges, links }) => {\n  return (\n    <aside\n      className={`sidebar-container width-full ${\n        config.sidebarSticky ? \"height-full\" : \"\"\n      }`}\n    >\n      <WidgetSearch />\n\n      {latestPostEdges && (\n        <WidgetLatestPosts latestPostEdges={latestPostEdges} />\n      )}\n\n      {categoryList && <WidgetCategory categoryList={categoryList} />}\n\n      {tagList && <WidgetTag tagList={tagList} />}\n\n      {links && (\n        <div className=\"position-sticky top-zero\">\n          <WidgetLinks links={links} />\n        </div>\n      )}\n    </aside>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\n\nconst Page = ({ postNode, slug }) => {\n  const post = postNode.frontmatter;\n  if (!post.id) {\n    post.id = slug;\n  }\n\n  return (\n    <div className=\"page-container\">\n      <div\n        className=\"padding-top padding-bottom\"\n        dangerouslySetInnerHTML={{ __html: postNode.html }}\n      />\n    </div>\n  );\n};\n\nexport default Page;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport Header from \"../components/Header/Header\";\nimport MainContainer from \"../components/MainContainer/MainContainer\";\nimport Sidebar from \"../components/Sidebar/Sidebar\";\nimport Page from \"../components/Page/Page\";\nimport SEO from \"../components/SEO/SEO\";\nimport config from \"../../data/SiteConfig\";\n\nconst PageTemplate = ({ data, pageContext }) => {\n  const { slug, tagList, categoryList, latestPostEdges } = pageContext;\n  const postNode = data.markdownRemark;\n  const title = postNode.frontmatter.title;\n  const content = <Page postNode={postNode} slug={slug} />;\n  const sidebar = (\n    <Sidebar\n      tagList={tagList}\n      categoryList={categoryList}\n      latestPostEdges={latestPostEdges}\n      links={config.sidebarLinks}\n    />\n  );\n\n  return (\n    <Layout>\n      <Helmet>\n        <title>{`${title} - ${config.siteTitle}`}</title>\n      </Helmet>\n      <SEO postPath={slug} postNode={postNode} postSEO />\n      <Header title={title} />\n      <MainContainer content={content} sidebar={sidebar} />\n    </Layout>\n  );\n};\n\nexport default PageTemplate;\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query BlogPageBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n        description\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`;\n"],"names":["strArray","resultArray","length","TypeError","match","first","shift","replace","i","component","push","str","join","parts","split","normalize","arguments","slice","call","module","exports","definition","_ref","title","React","className","content","sidebar","SEO","_Component","apply","_inheritsLoose","prototype","render","description","keywords","postURL","_this$props","this","props","postNode","postPath","postSEO","image","postMeta","frontmatter","excerpt","cover","getSrc","urljoin","config","blogURL","schemaOrgJSONLD","url","name","alternateName","itemListElement","position","item","headline","Helmet","rel","href","useSlash","type","JSON","stringify","property","Component","_ref$extraClass","extraClass","children","categoryList","WidgetContainer","WidgetTitle","map","category","AutoLink","key","to","getCategoryPath","getTagPath","tagList","tag","Tag","latestPostEdges","postList","getPostList","post","slug","links","link","label","WidgetSearch","action","method","placeholder","required","spellCheck","FontAwesomeIcon","icon","style","color","WidgetLatestPosts","WidgetCategory","WidgetTag","WidgetLinks","id","dangerouslySetInnerHTML","__html","html","data","pageContext","markdownRemark","Page","Sidebar","Layout","Header","MainContainer"],"sourceRoot":""}